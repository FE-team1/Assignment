{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\uCEF4\\uACF5\\\\\\uD504\\uB860\\uD2B8\\uC5D4\\uB4DC - \\uAE40\\uC131\\uC6A9 23\\uB144 \\uCD08\\uC911\\uBC18\\\\7~10\\uC6D4\\\\\\uB3D9\\uB8CC\\uD559\\uC2B5\\\\3\\uC8FC\\uCC28 react state \\uBB38\\uC81C\\uD480\\uC774\\\\hookstest\\\\Hooks\\\\src\\\\hooks\\\\2.state\\\\state1.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport PlayListMock from \"../../__mock__/playList.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction State1() {\n  _s();\n  /*\r\n    문제 1.\r\n      state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n      아래에 추가버튼을 눌러 목록에 리스트를 추가하고\r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\n  console.log(PlayListMock.playlist);\n  /* 데이터 콘솔에 찍어두었으니 확인해볼 것 */\n\n  const [playList, setPlayList] = useState(PlayListMock.playlist);\n  // const [title, setTitle] = useState(\"\");\n  // const [signer, setSinger] = useState(\"\");\n\n  // state 값 하나로 묶어서 사용하기\n  const [song, setSong] = useState({\n    title: \"\",\n    signer: \"\"\n  });\n\n  // 객체 전체를 업데이트 해야함\n  const onChangeValue = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSong(prevSong => ({\n      ...prevSong,\n      [name]: value\n    }));\n  };\n  const onAddPlayList = () => {\n    const newSong = {\n      title: song.title,\n      signer: song.signer\n    };\n    setPlayList(prevList => [...prevList, newSong]); // 기존값은 그대로 복사, 기존값 뒤에 객체 형태의 newSong을 추가하여 클릭 이벤트시 UI에 보여줌\n    setSong({\n      title: \"\",\n      signer: \"\"\n    }); // 추가 후 input값 비워주기\n  };\n\n  // 선택한 li 삭제 함수, <li key = {i}>의 i 값과 json 데이터의 인텍스가 같지 않은 것만 보여주게해라, 즉 같은 인덱스이면 안보이게해서 삭제된 것처럼 보여주기\n  const onRemovePlayList = i => {\n    setPlayList(playList.filter((_, idx) => idx !== i));\n    // setPlayList((prevList) => prevList.filter((_, idx) => idx !== i));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBB38\\uC81C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [playList.map((list, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: list.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: list.signer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onRemovePlayList(i),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Summer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Joe Hisaishi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACE1\\uBA85 :\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"title\",\n          value: song.title,\n          onChange: onChangeValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uAC00\\uC218/\\uC791\\uACE1 :\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"signer\",\n          value: song.signer,\n          onChange: onChangeValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddPlayList,\n          children: \"\\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(State1, \"BbA9JnMOU5zf+nIkeHJRNVccC0A=\");\n_c = State1;\nexport default State1;\nvar _c;\n$RefreshReg$(_c, \"State1\");","map":{"version":3,"names":["useState","PlayListMock","State1","console","log","playlist","playList","setPlayList","song","setSong","title","signer","onChangeValue","e","name","value","target","prevSong","onAddPlayList","newSong","prevList","onRemovePlayList","i","filter","_","idx","map","list"],"sources":["E:/컴공/프론트엔드 - 김성용 23년 초중반/7~10월/동료학습/3주차 react state 문제풀이/hookstest/Hooks/src/hooks/2.state/state1.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport PlayListMock from \"../../__mock__/playList.json\";\r\n\r\nfunction State1() {\r\n  /*\r\n    문제 1.\r\n\r\n    state를 다루기 위한 기초 문제입니다.\r\n    음악 목록 10가지의 mock data가 있습니다.\r\n\r\n    아래에 추가버튼을 눌러 목록에 리스트를 추가하고\r\n    삭제 버턴을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요\r\n  */\r\n  console.log(PlayListMock.playlist);\r\n  /* 데이터 콘솔에 찍어두었으니 확인해볼 것 */\r\n\r\n  const [playList, setPlayList] = useState(PlayListMock.playlist);\r\n  // const [title, setTitle] = useState(\"\");\r\n  // const [signer, setSinger] = useState(\"\");\r\n\r\n  // state 값 하나로 묶어서 사용하기\r\n  const [song, setSong] = useState({\r\n    title: \"\",\r\n    signer: \"\",\r\n  });\r\n\r\n  // 객체 전체를 업데이트 해야함\r\n  const onChangeValue = (e) => {\r\n    const { name, value } = e.target;\r\n    setSong((prevSong) => ({ ...prevSong, [name]: value }));\r\n  };\r\n\r\n  const onAddPlayList = () => {\r\n    const newSong = { title: song.title, signer: song.signer };\r\n    setPlayList((prevList) => [...prevList, newSong]); // 기존값은 그대로 복사, 기존값 뒤에 객체 형태의 newSong을 추가하여 클릭 이벤트시 UI에 보여줌\r\n    setSong({ title: \"\", signer: \"\" }); // 추가 후 input값 비워주기\r\n  };\r\n\r\n  // 선택한 li 삭제 함수, <li key = {i}>의 i 값과 json 데이터의 인텍스가 같지 않은 것만 보여주게해라, 즉 같은 인덱스이면 안보이게해서 삭제된 것처럼 보여주기\r\n  const onRemovePlayList = (i) => {\r\n    setPlayList(playList.filter((_, idx) => idx !== i));\r\n    // setPlayList((prevList) => prevList.filter((_, idx) => idx !== i));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>문제1</h1>\r\n      <ul>\r\n        {/* list */}\r\n        {/* 예시 데이터입니다 */}\r\n        {playList.map((list, i) => (\r\n          <li key={i}>\r\n            <h3>{list.title}</h3>\r\n            <p>{list.signer}</p>\r\n            <button onClick={() => onRemovePlayList(i)}>삭제</button>\r\n          </li>\r\n        ))}\r\n        <li>\r\n          <h3>Summer</h3>\r\n          <p>Joe Hisaishi</p>\r\n        </li>\r\n      </ul>\r\n      <div>\r\n        <p>\r\n          곡명 :{\" \"}\r\n          <input name=\"title\" value={song.title} onChange={onChangeValue} />\r\n        </p>\r\n        <p>\r\n          가수/작곡 :{\" \"}\r\n          <input name=\"signer\" value={song.signer} onChange={onChangeValue} />\r\n        </p>\r\n        <p>\r\n          <button onClick={onAddPlayList}>추가</button>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default State1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}